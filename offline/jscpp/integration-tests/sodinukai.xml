<?xml version="1.0" encoding="UTF-8"?>
<code><![CDATA[#include <iostream>
#include <fstream>
#include <iomanip>

using namespace std;

const int MAX_SODINUKAI = 100;

// Duomenų skaitymo funkcija
void skaitytiDuomenis(const char* filename, int &a1, int &a2, int sodinukai[], int &n) {
    ifstream fin(filename);
    fin >> a1 >> a2;
    n = 0;
    while (fin >> sodinukai[n]) {
        n++;
    }
    fin.close();
}

// Sodinukų atrinkimo funkcija
void atrinktiSodinukus(int a1, int a2, int sodinukai[], int n, int atrinkti[], int &atrinktuSk) {
    atrinktuSk = 0;
    for (int i = 0; i < n; i++) {
        if (sodinukai[i] >= a1 && sodinukai[i] <= a2) {
            atrinkti[atrinktuSk++] = sodinukai[i];
        }
    }
}

// Sodinukų vidurkio skaičiavimo funkcija
double skaiciuotiSodinukuVidurki(int sodinukai[], int n) {
    if (n == 0) return 0;
    double suma = 0;
    for (int i = 0; i < n; i++) {
        suma += sodinukai[i];
    }
    return suma / n;
}

// Rezultatų rašymo į failą funkcija
void rasytiRezultatus(const char* filename, double visuVidurkis, int atrinktuSk, double atrinktuVidurkis, int atrinkti[]) {
    ofstream fout(filename);
    fout << fixed << setprecision(1) << visuVidurkis << endl;
    fout << atrinktuSk << endl;
    if (atrinktuSk > 0) {
        fout << atrinktuVidurkis << endl;
        for (int i = 0; i < atrinktuSk; i++) {
            fout << atrinkti[i] << " ";
        }
    } else {
        fout << "NE" << endl;
    }
    fout.close();
}

int main() {
    int a1, a2, sodinukai[MAX_SODINUKAI], atrinkti[MAX_SODINUKAI], n, atrinktuSk;
    skaitytiDuomenis("sodinukai_data.txt", a1, a2, sodinukai, n);
    atrinktiSodinukus(a1, a2, sodinukai, n, atrinkti, atrinktuSk);

    double visuVidurkis = skaiciuotiSodinukuVidurki(sodinukai, n);
    double atrinktuVidurkis = skaiciuotiSodinukuVidurki(atrinkti, atrinktuSk);

    rasytiRezultatus("sodinukai_res.txt", visuVidurkis, atrinktuSk, atrinktuVidurkis, atrinkti);

    return 0;
}]]></code>
<tests>
 <test id="test_1">
  <console>
   <input visible="1"><![CDATA[]]></input>
   <output visible="1"><![CDATA[]]></output>
  </console>
  <files>
   <input filename="sodinukai_data.txt" visible="1"><![CDATA[50 60
53
45
56
54
56]]></input>
   <output filename="sodinukai_res.txt" visible="1"><![CDATA[52.8
4
54.8
53 56 54 56]]></output>
  </files>
 </test>
 <test id="test_2">
  <console>
   <input visible="1"><![CDATA[]]></input>
   <output visible="1"><![CDATA[]]></output>
  </console>
  <files>
   <input filename="sodinukai_data.txt" visible="1"><![CDATA[40 55
42
50
53
40
56
45]]></input>
   <output filename="sodinukai_res.txt" visible="1"><![CDATA[47.7
5
46.0
42 50 53 40 45]]></output>
  </files>
 </test>
 <test id="test_3">
  <console>
   <input visible="1"><![CDATA[]]></input>
   <output visible="1"><![CDATA[]]></output>
  </console>
  <files>
   <input filename="sodinukai_data.txt" visible="1"><![CDATA[30 50
25
30
40
50
55
35]]></input>
   <output filename="sodinukai_res.txt" visible="1"><![CDATA[39.2
4
38.8
30 40 50 35]]></output>
  </files>
 </test>
 <test id="test_4">
  <console>
   <input visible="1"><![CDATA[]]></input>
   <output visible="1"><![CDATA[]]></output>
  </console>
  <files>
   <input filename="sodinukai_data.txt" visible="1"><![CDATA[45 65
44
45
60
65
70
50]]></input>
   <output filename="sodinukai_res.txt" visible="1"><![CDATA[55.7
4
55.0
45 60 65 50]]></output>
  </files>
 </test>
 <test id="test_5">
  <console>
   <input visible="1"><![CDATA[]]></input>
   <output visible="1"><![CDATA[]]></output>
  </console>
  <files>
   <input filename="sodinukai_data.txt" visible="1"><![CDATA[55 70
60
55
70
75
65
54]]></input>
   <output filename="sodinukai_res.txt" visible="1"><![CDATA[63.2
4
62.5
60 55 70 65]]></output>
  </files>
 </test>
</tests>